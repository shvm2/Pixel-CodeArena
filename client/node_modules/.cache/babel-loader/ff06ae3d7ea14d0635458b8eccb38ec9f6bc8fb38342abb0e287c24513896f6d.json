{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\sheetcoder-master\\\\client\\\\src\\\\components\\\\CodingPage\\\\CodingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport CodingNavbar from \"../CodingNavbar/CodingNavbar\";\nimport Workspace from \"../Workspace/Workspace\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract contest ID from URL\n  const [contestDetails, setContestDetails] = useState({});\n  const [problemDetails, setProblemDetails] = useState({});\n  useEffect(() => {\n    // Fetch contest details\n    const fetchContestDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:6001/contest/${id}`);\n        setContestDetails(response.data);\n        console.log(response.data.que);\n        // Fetch problem details after getting contest details\n        const problemResponse = await axios.get(`http://localhost:6001/problem/${response.data.questionId}`);\n        setProblemDetails(problemResponse.data);\n      } catch (error) {\n        console.error(\"Error fetching contest or problem details:\", error);\n      }\n    };\n    fetchContestDetails();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-page\",\n    children: [/*#__PURE__*/_jsxDEV(CodingNavbar, {\n      contestTitle: contestDetails.title || \"Loading...\",\n      timeLimit: contestDetails.timeLimit || 30 // Default time limit is 30 minutes if not provided\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n      problemDetails: problemDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CodingPage, \"fGXmazld6ENcjyTJk8QGtfA1UuM=\", false, function () {\n  return [useParams];\n});\n_c = CodingPage;\nexport default CodingPage;\nvar _c;\n$RefreshReg$(_c, \"CodingPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","CodingNavbar","Workspace","jsxDEV","_jsxDEV","CodingPage","_s","id","contestDetails","setContestDetails","problemDetails","setProblemDetails","fetchContestDetails","response","get","data","console","log","que","problemResponse","questionId","error","className","children","contestTitle","title","timeLimit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/sheetcoder-master/client/src/components/CodingPage/CodingPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CodingNavbar from \"../CodingNavbar/CodingNavbar\";\r\nimport Workspace from \"../Workspace/Workspace\";\r\n\r\nconst CodingPage = () => {\r\n  const { id } = useParams(); // Extract contest ID from URL\r\n  const [contestDetails, setContestDetails] = useState({});\r\n  const [problemDetails, setProblemDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Fetch contest details\r\n    const fetchContestDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:6001/contest/${id}`);\r\n        setContestDetails(response.data);\r\n        console.log(response.data.que);\r\n        // Fetch problem details after getting contest details\r\n        const problemResponse = await axios.get(`http://localhost:6001/problem/${response.data.questionId}`);\r\n        setProblemDetails(problemResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching contest or problem details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchContestDetails();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"coding-page\">\r\n      <CodingNavbar\r\n        contestTitle={contestDetails.title || \"Loading...\"}\r\n        timeLimit={contestDetails.timeLimit || 30} // Default time limit is 30 minutes if not provided\r\n      />\r\n      <Workspace problemDetails={problemDetails} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodingPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,iCAAgCP,EAAG,EAAC,CAAC;QACvEE,iBAAiB,CAACI,QAAQ,CAACE,IAAI,CAAC;QAChCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAACG,GAAG,CAAC;QAC9B;QACA,MAAMC,eAAe,GAAG,MAAMpB,KAAK,CAACe,GAAG,CAAE,iCAAgCD,QAAQ,CAACE,IAAI,CAACK,UAAW,EAAC,CAAC;QACpGT,iBAAiB,CAACQ,eAAe,CAACJ,IAAI,CAAC;MACzC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IAEDT,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAKkB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BnB,OAAA,CAACH,YAAY;MACXuB,YAAY,EAAEhB,cAAc,CAACiB,KAAK,IAAI,YAAa;MACnDC,SAAS,EAAElB,cAAc,CAACkB,SAAS,IAAI,EAAG,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF1B,OAAA,CAACF,SAAS;MAACQ,cAAc,EAAEA;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhCID,UAAU;EAAA,QACCL,SAAS;AAAA;AAAA+B,EAAA,GADpB1B,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}