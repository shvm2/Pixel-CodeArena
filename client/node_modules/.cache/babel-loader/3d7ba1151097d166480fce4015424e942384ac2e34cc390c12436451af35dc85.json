{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Pixel-CodeArena\\\\client\\\\src\\\\components\\\\Workspace\\\\Workspace.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Split from \"react-split\";\nimport { toast } from \"react-toastify\";\nimport ProblemDescription from \"./ProblemDescription\";\nimport CodeEditor from \"./CodeEditor\";\nimport TestCases from \"./TestCases\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Workspace() {\n  _s();\n  const urlPathname = window.location.pathname;\n  const segments = urlPathname.split(\"/\");\n  const problemId = segments[segments.length - 1];\n  const [details, setDetails] = useState({});\n  const [code, setCode] = useState(\"\");\n  const [processing, setProcessing] = useState(false);\n  const testcases = details.testcases;\n  useEffect(() => {\n    async function fetchDetails() {\n      try {\n        const response = await axios.get(`http://localhost:6001/problem/${problemId}`);\n        setDetails(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchDetails();\n  }, [problemId]);\n  const onChange = data => {\n    setCode(data);\n  };\n  const handleCompile = () => {\n    setProcessing(true);\n    try {\n      var _details$testcases$;\n      // const result = eval(code);  // Evaluating the code directly\n      // console.log(\"Result:\", result);  // Output the result\n\n      // Optionally, if the code expects input and processes it, you can pass it like this:\n      const result = eval(`(function() { ${code} })()`);\n      const input = details === null || details === void 0 ? void 0 : (_details$testcases$ = details.testcases[0]) === null || _details$testcases$ === void 0 ? void 0 : _details$testcases$.input;\n      console.log(\"Input:\", input);\n      console.log(\"Result with input:\", result);\n    } catch (error) {\n      console.error(\"Error during evaluation:\", error);\n    } finally {\n      setProcessing(false); // Stop processing after evaluation\n    }\n  };\n\n  const checkStatus = async token => {\n    const options = {\n      method: \"GET\",\n      url: process.env.REACT_APP_RAPID_API_URL + \"/\" + token,\n      params: {\n        base64_encoded: \"true\",\n        fields: \"*\"\n      },\n      headers: {\n        \"X-RapidAPI-Host\": process.env.REACT_APP_RAPID_API_HOST,\n        \"X-RapidAPI-Key\": process.env.REACT_APP_RAPID_API_KEY\n      }\n    };\n    try {\n      const response = await axios.request(options);\n      const statusId = await response.data.status_id;\n      if (statusId === 1 || statusId === 2) {\n        setTimeout(() => {\n          checkStatus(token);\n        }, 2000);\n        return;\n      } else {\n        const output = atob(response.data.stdout);\n        const reqOutput = details.testcases[0].output;\n        if (output.trim() == reqOutput.trim()) {\n          toast.success(\"Congrats! TestCase Passesd\");\n        } else {\n          toast.error(\"Oops! Output Didn't Matched\");\n        }\n        setProcessing(false);\n        return;\n      }\n    } catch (error) {\n      setProcessing(false);\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Split, {\n    className: \"split\",\n    minSize: 0,\n    children: [/*#__PURE__*/_jsxDEV(ProblemDescription, {\n      details: details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Split, {\n      className: \"split-vertical\",\n      direction: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestCases, {\n        handleCompile: handleCompile,\n        testcases: testcases,\n        processing: processing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Workspace, \"/q0+25LJ5j7Ia7bjqUfdWBlw00o=\");\n_c = Workspace;\nexport default Workspace;\nvar _c;\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"names":["React","useState","useEffect","axios","Split","toast","ProblemDescription","CodeEditor","TestCases","jsxDEV","_jsxDEV","Workspace","_s","urlPathname","window","location","pathname","segments","split","problemId","length","details","setDetails","code","setCode","processing","setProcessing","testcases","fetchDetails","response","get","data","error","console","log","onChange","handleCompile","_details$testcases$","result","eval","input","checkStatus","token","options","method","url","process","env","REACT_APP_RAPID_API_URL","params","base64_encoded","fields","headers","REACT_APP_RAPID_API_HOST","REACT_APP_RAPID_API_KEY","request","statusId","status_id","setTimeout","output","atob","stdout","reqOutput","trim","success","className","minSize","children","fileName","_jsxFileName","lineNumber","columnNumber","direction","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Pixel-CodeArena/client/src/components/Workspace/Workspace.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Split from \"react-split\";\r\nimport { toast } from \"react-toastify\";\r\nimport ProblemDescription from \"./ProblemDescription\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport TestCases from \"./TestCases\";\r\n\r\nfunction Workspace() {\r\n  const urlPathname = window.location.pathname;\r\n  const segments = urlPathname.split(\"/\");\r\n  const problemId = segments[segments.length - 1];\r\n\r\n  const [details, setDetails] = useState({});\r\n  const [code, setCode] = useState(\"\");\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const testcases = details.testcases;\r\n\r\n  useEffect(() => {\r\n    async function fetchDetails() {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:6001/problem/${problemId}`\r\n        );\r\n        setDetails(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchDetails();\r\n  }, [problemId]);\r\n\r\n  const onChange = (data) => {\r\n    setCode(data);\r\n  };\r\n\r\n  const handleCompile = () => {\r\n    setProcessing(true);\r\n  \r\n    try {\r\n      // const result = eval(code);  // Evaluating the code directly\r\n      // console.log(\"Result:\", result);  // Output the result\r\n  \r\n      // Optionally, if the code expects input and processes it, you can pass it like this:\r\n      const result = eval(`(function() { ${code} })()`);\r\n      const input = details?.testcases[0]?.input;\r\n      console.log(\"Input:\",input);\r\n      \r\n      console.log(\"Result with input:\", result);\r\n    } catch (error) {\r\n      console.error(\"Error during evaluation:\", error);\r\n    } finally {\r\n      setProcessing(false);  // Stop processing after evaluation\r\n    }\r\n  };\r\n\r\n  const checkStatus = async (token) => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: process.env.REACT_APP_RAPID_API_URL + \"/\" + token,\r\n      params: { base64_encoded: \"true\", fields: \"*\" },\r\n      headers: {\r\n        \"X-RapidAPI-Host\": process.env.REACT_APP_RAPID_API_HOST,\r\n        \"X-RapidAPI-Key\": process.env.REACT_APP_RAPID_API_KEY,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await axios.request(options);\r\n      const statusId = await response.data.status_id;\r\n      if (statusId === 1 || statusId === 2) {\r\n        setTimeout(() => {\r\n          checkStatus(token);\r\n        }, 2000);\r\n        return;\r\n      } else {\r\n        const output = atob(response.data.stdout);\r\n        const reqOutput = details.testcases[0].output;\r\n\r\n        if (output.trim() == reqOutput.trim()) {\r\n          toast.success(\"Congrats! TestCase Passesd\");\r\n        } else {\r\n          toast.error(\"Oops! Output Didn't Matched\");\r\n        }\r\n        setProcessing(false);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      setProcessing(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Split className=\"split\" minSize={0}>\r\n      <ProblemDescription details={details} />\r\n      <Split className=\"split-vertical\" direction=\"vertical\">\r\n        <CodeEditor onChange={onChange} />\r\n        <TestCases\r\n          handleCompile={handleCompile}\r\n          testcases={testcases}\r\n          processing={processing}\r\n        />\r\n      </Split>\r\n    </Split>\r\n  );\r\n}\r\n\r\nexport default Workspace;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}