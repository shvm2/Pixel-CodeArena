{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\sheetcoder-master\\\\client\\\\src\\\\components\\\\Contest\\\\ContestTimer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport \"./ContestTimer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContestTimer = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the contest ID from the URL\n  const [contest, setContest] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(0);\n  useEffect(() => {\n    const fetchContest = async () => {\n      try {\n        const response = await axios.get(`http://localhost:6001/contest/${id}`);\n        setContest(response.data);\n        // Assuming you start the timer when contest starts\n        const now = new Date();\n        const startTime = new Date(response.data.startTime);\n        const endTime = new Date(response.data.endTime);\n        const duration = Math.max(0, Math.floor((endTime - now) / 1000));\n        setTimeLeft(duration);\n        setCurrentQuestion(response.data.questions[0]); // Load the first question\n      } catch (error) {\n        console.error(\"Error fetching contest details:\", error);\n      }\n    };\n    fetchContest();\n  }, [id]);\n  useEffect(() => {\n    if (timeLeft <= 0) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  if (!contest || !currentQuestion) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 44\n  }, this);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? `0${secs}` : secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contest-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: contest.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Time Left:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this), \" \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentQuestion.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ContestTimer, \"HGxfG+nrVpNCM3oLQ3vGYJh33sg=\", false, function () {\n  return [useParams];\n});\n_c = ContestTimer;\nexport default ContestTimer;\nvar _c;\n$RefreshReg$(_c, \"ContestTimer\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","ContestTimer","_s","id","contest","setContest","currentQuestion","setCurrentQuestion","timeLeft","setTimeLeft","fetchContest","response","get","data","now","Date","startTime","endTime","duration","Math","max","floor","questions","error","console","timer","setInterval","prevTime","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","formatTime","seconds","minutes","secs","className","title","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/sheetcoder-master/client/src/components/Contest/ContestTimer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./ContestTimer.css\";\r\n\r\nconst ContestTimer = () => {\r\n  const { id } = useParams(); // Get the contest ID from the URL\r\n  const [contest, setContest] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchContest = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:6001/contest/${id}`);\r\n        setContest(response.data);\r\n        // Assuming you start the timer when contest starts\r\n        const now = new Date();\r\n        const startTime = new Date(response.data.startTime);\r\n        const endTime = new Date(response.data.endTime);\r\n        const duration = Math.max(0, Math.floor((endTime - now) / 1000));\r\n        setTimeLeft(duration);\r\n        setCurrentQuestion(response.data.questions[0]); // Load the first question\r\n      } catch (error) {\r\n        console.error(\"Error fetching contest details:\", error);\r\n      }\r\n    };\r\n    fetchContest();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) return;\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => prevTime - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft]);\r\n\r\n  if (!contest || !currentQuestion) return <div>Loading...</div>;\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs < 10 ? `0${secs}` : secs}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"contest-timer\">\r\n      <h1>{contest.title}</h1>\r\n      <p><strong>Time Left:</strong> {formatTime(timeLeft)}</p>\r\n      <div className=\"question\">\r\n        <h2>{currentQuestion.title}</h2>\r\n        {/* Display the coding question here */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContestTimer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}