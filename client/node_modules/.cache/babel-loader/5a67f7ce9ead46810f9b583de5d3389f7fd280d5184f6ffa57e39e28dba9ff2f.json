{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\sheetcoder-master\\\\client\\\\src\\\\components\\\\CodingPage\\\\CodingPage.jsx\",\n  _s = $RefreshSig$();\n// components/CodingPage/CodingPage.jsx\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport CodingNavbar from \"../CodingNavbar/CodingNavbar\";\nimport Workspace from \"../Workspace/Workspace\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [contestDetails, setContestDetails] = useState({});\n  const [problems, setProblems] = useState([]);\n  useEffect(() => {\n    // Fetch contest details including problems\n    const fetchContestDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:6001/contest/${id}`);\n        setContestDetails(response.data);\n        setProblems(response.data.questions); // Set problems from the contest data\n      } catch (error) {\n        console.error(\"Error fetching contest details:\", error);\n      }\n    };\n    fetchContestDetails();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-page\",\n    children: [/*#__PURE__*/_jsxDEV(CodingNavbar, {\n      contestTitle: contestDetails.title || \"Loading...\",\n      timeLimit: contestDetails.timeLimit || 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), problems.length > 0 ? /*#__PURE__*/_jsxDEV(Workspace, {\n      problems: problems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading problems...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CodingPage, \"pMvU/FY2EltnY0uvCIuQIU5ZarI=\", false, function () {\n  return [useParams];\n});\n_c = CodingPage;\nexport default CodingPage;\nvar _c;\n$RefreshReg$(_c, \"CodingPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","CodingNavbar","Workspace","jsxDEV","_jsxDEV","CodingPage","_s","id","contestDetails","setContestDetails","problems","setProblems","fetchContestDetails","response","get","data","questions","error","console","className","children","contestTitle","title","timeLimit","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/sheetcoder-master/client/src/components/CodingPage/CodingPage.jsx"],"sourcesContent":["// components/CodingPage/CodingPage.jsx\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CodingNavbar from \"../CodingNavbar/CodingNavbar\";\r\nimport Workspace from \"../Workspace/Workspace\";\r\n\r\nconst CodingPage = () => {\r\n  const { id } = useParams();\r\n  const [contestDetails, setContestDetails] = useState({});\r\n  const [problems, setProblems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch contest details including problems\r\n    const fetchContestDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:6001/contest/${id}`);\r\n        setContestDetails(response.data);\r\n        setProblems(response.data.questions); // Set problems from the contest data\r\n      } catch (error) {\r\n        console.error(\"Error fetching contest details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchContestDetails();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"coding-page\">\r\n      <CodingNavbar\r\n        contestTitle={contestDetails.title || \"Loading...\"}\r\n        timeLimit={contestDetails.timeLimit || 30}\r\n      />\r\n      {problems.length > 0 ? (\r\n        <Workspace problems={problems} />\r\n      ) : (\r\n        <p>Loading problems...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodingPage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,iCAAgCP,EAAG,EAAC,CAAC;QACvEE,iBAAiB,CAACI,QAAQ,CAACE,IAAI,CAAC;QAChCJ,WAAW,CAACE,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDL,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BhB,OAAA,CAACH,YAAY;MACXoB,YAAY,EAAEb,cAAc,CAACc,KAAK,IAAI,YAAa;MACnDC,SAAS,EAAEf,cAAc,CAACe,SAAS,IAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACDjB,QAAQ,CAACkB,MAAM,GAAG,CAAC,gBAClBxB,OAAA,CAACF,SAAS;MAACQ,QAAQ,EAAEA;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEjCvB,OAAA;MAAAgB,QAAA,EAAG;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAjCID,UAAU;EAAA,QACCL,SAAS;AAAA;AAAA6B,EAAA,GADpBxB,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}