{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Pixel-CodeArena\\\\client\\\\src\\\\components\\\\Playground\\\\Playground.jsx\",\n  _s = $RefreshSig$();\nimport CodeEditor from \"../Workspace/CodeEditor\";\nimport axios from \"axios\";\nimport Split from \"react-split\";\nimport { toast } from \"react-toastify\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Workspace() {\n  _s();\n  const [code, setCode] = useState(\"\");\n  const [processing, setProcessing] = useState(false);\n  const [output, setOutput] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    async function fetchDetails() {\n      try {\n        const response = await axios.get(`http://localhost:6001/problem/${problemId}`);\n        setDetails(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchDetails();\n  }, [problemId]);\n  const onChange = data => {\n    setCode(data);\n  };\n  const handleCompile = async () => {\n    setProcessing(true);\n    try {\n      const allResults = [];\n      for (const testcase of testcases) {\n        const response = await axios.post(\"http://localhost:6001/get-code\", {\n          code\n        });\n        if (response.status === 200) {\n          const output = response.data.replace(\"Output: \", \"\").trim();\n          const isPassing = output === testcase.expectedOutput.trim();\n          allResults.push({\n            input: testcase.input,\n            expected: testcase.expectedOutput,\n            output,\n            isPassing\n          });\n        } else {\n          allResults.push({\n            input: testcase.input,\n            expected: testcase.expectedOutput,\n            output: \"Execution failed\",\n            isPassing: false\n          });\n        }\n      }\n      setTestResults(allResults);\n      if (allResults.every(result => result.isPassing)) {\n        toast.success(\"All test cases passed!\");\n        setError(\"\");\n      } else {\n        toast.error(\"Some test cases failed.\");\n        setError(\"\");\n      }\n    } catch (error) {\n      console.error(\"Error during execution:\", error);\n      setError(error.message || \"An unknown error occurred.\");\n      toast.error(\"Error during execution. Check console for details.\");\n    } finally {\n      setProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Split, {\n    className: \"split\",\n    minSize: 0,\n    children: [/*#__PURE__*/_jsxDEV(ProblemDescription, {\n      details: details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Split, {\n      className: \"split-vertical\",\n      direction: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TestCases, {\n        handleCompile: handleCompile,\n        testcases: testcases,\n        processing: processing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Test Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), testResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Input: \", result.input]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Expected Output: \", result.expected]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Output: \", result.output]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", result.isPassing ? \"Passed\" : \"Failed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Workspace, \"XXOgFHyA9x2PbVawoshlElswSHI=\");\n_c = Workspace;\n;\nexport default Workspace;\nvar _c;\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"names":["CodeEditor","axios","Split","toast","React","useState","useEffect","jsxDEV","_jsxDEV","Workspace","_s","code","setCode","processing","setProcessing","output","setOutput","error","setError","fetchDetails","response","get","problemId","setDetails","data","console","log","onChange","handleCompile","allResults","testcase","testcases","post","status","replace","trim","isPassing","expectedOutput","push","input","expected","setTestResults","every","result","success","message","className","minSize","children","ProblemDescription","details","fileName","_jsxFileName","lineNumber","columnNumber","direction","TestCases","testResults","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Pixel-CodeArena/client/src/components/Playground/Playground.jsx"],"sourcesContent":["import CodeEditor from \"../Workspace/CodeEditor\";\r\nimport axios from \"axios\";\r\nimport Split from \"react-split\";\r\nimport { toast } from \"react-toastify\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nfunction Workspace(){\r\n    const [code, setCode] = useState(\"\");\r\n    const [processing, setProcessing] = useState(false);\r\n    const [output, setOutput] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchDetails() {\r\n          try {\r\n            const response = await axios.get(\r\n              `http://localhost:6001/problem/${problemId}`\r\n            );\r\n            setDetails(response.data);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n        fetchDetails();\r\n      }, [problemId]);\r\n    \r\n      const onChange = (data) => {\r\n        setCode(data);\r\n      };\r\n      const handleCompile = async () => {\r\n        setProcessing(true);\r\n    \r\n        try {\r\n          const allResults = [];\r\n    \r\n          for (const testcase of testcases) {\r\n            const response = await axios.post(\"http://localhost:6001/get-code\", {\r\n              code,\r\n            });\r\n    \r\n            if (response.status === 200) {\r\n              const output = response.data.replace(\"Output: \", \"\").trim();\r\n    \r\n              const isPassing = output ===  testcase.expectedOutput.trim();\r\n              allResults.push({\r\n                input: testcase.input,\r\n                expected: testcase.expectedOutput,\r\n                output,\r\n                isPassing,\r\n              });\r\n            } else {\r\n              allResults.push({\r\n                input: testcase.input,\r\n                expected: testcase.expectedOutput,\r\n                output: \"Execution failed\",\r\n                isPassing: false,\r\n              });\r\n            }\r\n          }\r\n    \r\n          setTestResults(allResults);\r\n    \r\n          if (allResults.every((result) => result.isPassing)) {\r\n            toast.success(\"All test cases passed!\");\r\n            setError(\"\");\r\n          } else {\r\n            toast.error(\"Some test cases failed.\");\r\n            setError(\"\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error during execution:\", error);\r\n          setError(error.message || \"An unknown error occurred.\");\r\n          toast.error(\"Error during execution. Check console for details.\");\r\n        } finally {\r\n          setProcessing(false);\r\n        }\r\n      };\r\n\r\n      return (\r\n        <Split className=\"split\" minSize={0}>\r\n          <ProblemDescription details={details} />\r\n          <Split className=\"split-vertical\" direction=\"vertical\">\r\n            <CodeEditor onChange={onChange} />\r\n            <TestCases\r\n              handleCompile={handleCompile}\r\n              testcases={testcases}\r\n              processing={processing}\r\n            />\r\n            <div className=\"result-container\">\r\n              <div className=\"output-tab\">\r\n                <h3>Test Results</h3>\r\n                {testResults.map((result, index) => (\r\n                  <div key={index}>\r\n                    <p>Input: {result.input}</p>\r\n                    <p>Expected Output: {result.expected}</p>\r\n                    <p>Output: {result.output}</p>\r\n                    <p>Status: {result.isPassing ? \"Passed\" : \"Failed\"}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"error-tab\">\r\n                <h3>Error</h3>\r\n                <pre>{error}</pre>\r\n              </div>\r\n            </div>\r\n          </Split>\r\n        </Split>\r\n      );\r\n    };\r\n    \r\n\r\n\r\n\r\nexport default Workspace;"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,eAAea,YAAYA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAC7B,iCAAgCC,SAAU,EAC7C,CAAC;QACDC,UAAU,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;MACpB;IACF;IACAE,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACG,SAAS,CAAC,CAAC;EAEf,MAAMK,QAAQ,GAAIH,IAAI,IAAK;IACzBZ,OAAO,CAACY,IAAI,CAAC;EACf,CAAC;EACD,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCd,aAAa,CAAC,IAAI,CAAC;IAEnB,IAAI;MACF,MAAMe,UAAU,GAAG,EAAE;MAErB,KAAK,MAAMC,QAAQ,IAAIC,SAAS,EAAE;QAChC,MAAMX,QAAQ,GAAG,MAAMnB,KAAK,CAAC+B,IAAI,CAAC,gCAAgC,EAAE;UAClErB;QACF,CAAC,CAAC;QAEF,IAAIS,QAAQ,CAACa,MAAM,KAAK,GAAG,EAAE;UAC3B,MAAMlB,MAAM,GAAGK,QAAQ,CAACI,IAAI,CAACU,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;UAE3D,MAAMC,SAAS,GAAGrB,MAAM,KAAMe,QAAQ,CAACO,cAAc,CAACF,IAAI,CAAC,CAAC;UAC5DN,UAAU,CAACS,IAAI,CAAC;YACdC,KAAK,EAAET,QAAQ,CAACS,KAAK;YACrBC,QAAQ,EAAEV,QAAQ,CAACO,cAAc;YACjCtB,MAAM;YACNqB;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACLP,UAAU,CAACS,IAAI,CAAC;YACdC,KAAK,EAAET,QAAQ,CAACS,KAAK;YACrBC,QAAQ,EAAEV,QAAQ,CAACO,cAAc;YACjCtB,MAAM,EAAE,kBAAkB;YAC1BqB,SAAS,EAAE;UACb,CAAC,CAAC;QACJ;MACF;MAEAK,cAAc,CAACZ,UAAU,CAAC;MAE1B,IAAIA,UAAU,CAACa,KAAK,CAAEC,MAAM,IAAKA,MAAM,CAACP,SAAS,CAAC,EAAE;QAClDjC,KAAK,CAACyC,OAAO,CAAC,wBAAwB,CAAC;QACvC1B,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACLf,KAAK,CAACc,KAAK,CAAC,yBAAyB,CAAC;QACtCC,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdQ,OAAO,CAACR,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAACD,KAAK,CAAC4B,OAAO,IAAI,4BAA4B,CAAC;MACvD1C,KAAK,CAACc,KAAK,CAAC,oDAAoD,CAAC;IACnE,CAAC,SAAS;MACRH,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEN,OAAA,CAACN,KAAK;IAAC4C,SAAS,EAAC,OAAO;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,gBAClCxC,OAAA,CAACyC,kBAAkB;MAACC,OAAO,EAAEA;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxC9C,OAAA,CAACN,KAAK;MAAC4C,SAAS,EAAC,gBAAgB;MAACS,SAAS,EAAC,UAAU;MAAAP,QAAA,gBACpDxC,OAAA,CAACR,UAAU;QAAC2B,QAAQ,EAAEA;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClC9C,OAAA,CAACgD,SAAS;QACR5B,aAAa,EAAEA,aAAc;QAC7BG,SAAS,EAAEA,SAAU;QACrBlB,UAAU,EAAEA;MAAW;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF9C,OAAA;QAAKsC,SAAS,EAAC,kBAAkB;QAAAE,QAAA,gBAC/BxC,OAAA;UAAKsC,SAAS,EAAC,YAAY;UAAAE,QAAA,gBACzBxC,OAAA;YAAAwC,QAAA,EAAI;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACpBG,WAAW,CAACC,GAAG,CAAC,CAACf,MAAM,EAAEgB,KAAK,kBAC7BnD,OAAA;YAAAwC,QAAA,gBACExC,OAAA;cAAAwC,QAAA,GAAG,SAAO,EAACL,MAAM,CAACJ,KAAK;YAAA;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5B9C,OAAA;cAAAwC,QAAA,GAAG,mBAAiB,EAACL,MAAM,CAACH,QAAQ;YAAA;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzC9C,OAAA;cAAAwC,QAAA,GAAG,UAAQ,EAACL,MAAM,CAAC5B,MAAM;YAAA;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9B9C,OAAA;cAAAwC,QAAA,GAAG,UAAQ,EAACL,MAAM,CAACP,SAAS,GAAG,QAAQ,GAAG,QAAQ;YAAA;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAJ/CK,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN9C,OAAA;UAAKsC,SAAS,EAAC,WAAW;UAAAE,QAAA,gBACxBxC,OAAA;YAAAwC,QAAA,EAAI;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd9C,OAAA;YAAAwC,QAAA,EAAM/B;UAAK;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAAC5C,EAAA,CAtGID,SAAS;AAAAmD,EAAA,GAATnD,SAAS;AAsGb;AAKL,eAAeA,SAAS;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}