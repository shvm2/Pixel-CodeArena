{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\sheetcoder-master\\\\client\\\\src\\\\components\\\\Contest\\\\CreateContest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateContest = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [timeLimit, setTimeLimit] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const response = await axios.get(\"/problemsTable\");\n      setQuestions(response.data);\n    };\n    fetchQuestions();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const creatorId = localStorage.getItem(\"userId\");\n    const contestData = {\n      creatorId,\n      title,\n      questionIds: selectedQuestions,\n      timeLimit,\n      startTime,\n      endTime\n    };\n    try {\n      await axios.post(\"/contest/create\", contestData);\n      alert(\"Contest created successfully!\");\n    } catch (error) {\n      alert(\"Error creating contest\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Contest Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      value: selectedQuestions,\n      onChange: e => setSelectedQuestions([...e.target.selectedOptions].map(o => o.value)),\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: question._id,\n        children: question.title\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Time Limit (in minutes)\",\n      value: timeLimit,\n      onChange: e => setTimeLimit(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      placeholder: \"Start Time\",\n      value: startTime,\n      onChange: e => setStartTime(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      placeholder: \"End Time\",\n      value: endTime,\n      onChange: e => setEndTime(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Contest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateContest, \"ulkCQhYMeHZVJ91qPZy82weh7Jc=\");\n_c = CreateContest;\nexport default CreateContest;\nvar _c;\n$RefreshReg$(_c, \"CreateContest\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CreateContest","_s","title","setTitle","questions","setQuestions","selectedQuestions","setSelectedQuestions","timeLimit","setTimeLimit","startTime","setStartTime","endTime","setEndTime","fetchQuestions","response","get","data","handleSubmit","e","preventDefault","creatorId","localStorage","getItem","contestData","questionIds","post","alert","error","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","multiple","selectedOptions","map","o","question","_id","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/sheetcoder-master/client/src/components/Contest/CreateContest.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CreateContest = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\r\n  const [timeLimit, setTimeLimit] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      const response = await axios.get(\"/problemsTable\");\r\n      setQuestions(response.data);\r\n    };\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const creatorId = localStorage.getItem(\"userId\");\r\n    const contestData = {\r\n      creatorId,\r\n      title,\r\n      questionIds: selectedQuestions,\r\n      timeLimit,\r\n      startTime,\r\n      endTime,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\"/contest/create\", contestData);\r\n      alert(\"Contest created successfully!\");\r\n    } catch (error) {\r\n      alert(\"Error creating contest\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Contest Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <select\r\n        multiple\r\n        value={selectedQuestions}\r\n        onChange={(e) => setSelectedQuestions([...e.target.selectedOptions].map(o => o.value))}\r\n      >\r\n        {questions.map((question) => (\r\n          <option key={question._id} value={question._id}>\r\n            {question.title}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Time Limit (in minutes)\"\r\n        value={timeLimit}\r\n        onChange={(e) => setTimeLimit(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"datetime-local\"\r\n        placeholder=\"Start Time\"\r\n        value={startTime}\r\n        onChange={(e) => setStartTime(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"datetime-local\"\r\n        placeholder=\"End Time\"\r\n        value={endTime}\r\n        onChange={(e) => setEndTime(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Create Contest</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateContest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}