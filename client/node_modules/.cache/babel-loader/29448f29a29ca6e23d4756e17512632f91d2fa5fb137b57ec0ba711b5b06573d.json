{"ast":null,"code":"var _jsxFileName = \"/Users/pragya/Desktop/CodeBrewers/Pixel-CodeArena/client/src/components/Workspace/ProblemDescription.jsx\";\nimport React from \"react\";\nimport \"./Workspace.css\";\n// import ProblemDetails from \"../../problem.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProblemDescription({\n  details\n}) {\n  var _details$examples, _details$constraints;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem-desc-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-desc-heading\",\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desc-title\",\n      children: [details.order, \". \", details.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desc-difficult\",\n      style: {\n        color: \"green\"\n      },\n      children: details.difficult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"companies-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-companies\",\n        children: \"Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-description\",\n      children: details.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-examples\",\n      children: (_details$examples = details.examples) === null || _details$examples === void 0 ? void 0 : _details$examples.map((example, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-no\",\n            children: [\"Example \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-desc\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Input:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), \" \", example.input, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Output:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), \" \", example.output, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Explanation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), \" \", example.explanation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"constraints-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"constraints\",\n        children: \"Constraints:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), (_details$constraints = details.constraints) === null || _details$constraints === void 0 ? void 0 : _details$constraints.map((constraint, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: constraint\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = ProblemDescription;\nexport default ProblemDescription;\nvar _c;\n$RefreshReg$(_c, \"ProblemDescription\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProblemDescription","details","_details$examples","_details$constraints","className","children","fileName","_jsxFileName","lineNumber","columnNumber","order","title","style","color","difficult","description","examples","map","example","index","input","output","explanation","constraints","constraint","_c","$RefreshReg$"],"sources":["/Users/pragya/Desktop/CodeBrewers/Pixel-CodeArena/client/src/components/Workspace/ProblemDescription.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./Workspace.css\";\n// import ProblemDetails from \"../../problem.js\";\n\nfunction ProblemDescription({ details }) {\n  return (\n    <div className=\"problem-desc-container\">\n      <div className=\"problem-desc-heading\">Description</div>\n      <div className=\"desc-title\">\n        {details.order}. {details.title}\n      </div>\n      <div className=\"desc-difficult\" style={{ color: \"green\" }}>\n        {details.difficult}\n      </div>\n      <div className=\"companies-container\">\n        <div className=\"problem-companies\">Companies</div>\n      </div>\n      <div className=\"problem-description\">{details.description}</div>\n      <div className=\"problem-examples\">\n        {details.examples?.map((example, index) => {\n          return (\n            <div className=\"example-container\" key={index}>\n              <div className=\"example-no\">Example {index + 1}:</div>\n              <div className=\"example-desc\">\n                <strong>Input:</strong> {example.input} <br />\n                <strong>Output:</strong> {example.output}\n                <br />\n                <strong>Explanation:</strong> {example.explanation}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"constraints-container\">\n        <div className=\"constraints\">Constraints:</div>\n        {details.constraints?.map((constraint, index) => {\n          return <li key={index}>{constraint}</li>;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ProblemDescription;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}