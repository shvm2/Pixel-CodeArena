{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\Downloads\\\\sheetcoder-master\\\\client\\\\src\\\\components\\\\Contest\\\\CreateContest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./CreateContest.css\";\nimport Navbar from \"../Topbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateContest = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [timeLimit, setTimeLimit] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const response = await axios.get(\"/problemsTable\");\n      setQuestions(response.data);\n    };\n    fetchQuestions();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const creatorId = localStorage.getItem(\"userId\");\n    const contestData = {\n      creatorId,\n      title,\n      questionIds: selectedQuestions,\n      timeLimit,\n      startTime,\n      endTime\n    };\n    try {\n      await axios.post(\"/contest/create\", contestData);\n      alert(\"Contest created successfully!\");\n    } catch (error) {\n      alert(\"Error creating contest\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Workspace, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-contest-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Contest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"create-contest-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Contest Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter contest title\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: selectedQuestions,\n            onChange: e => setSelectedQuestions([...e.target.selectedOptions].map(o => o.value)),\n            required: true,\n            children: questions.map(question => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: question._id,\n              children: question.title\n            }, question._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time Limit (minutes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Enter time limit\",\n            value: timeLimit,\n            onChange: e => setTimeLimit(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: startTime,\n            onChange: e => setStartTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: endTime,\n            onChange: e => setEndTime(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"create-contest-button\",\n          children: \"Create Contest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateContest, \"ulkCQhYMeHZVJ91qPZy82weh7Jc=\");\n_c = CreateContest;\nexport default CreateContest;\nvar _c;\n$RefreshReg$(_c, \"CreateContest\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","jsxDEV","_jsxDEV","CreateContest","_s","title","setTitle","questions","setQuestions","selectedQuestions","setSelectedQuestions","timeLimit","setTimeLimit","startTime","setStartTime","endTime","setEndTime","fetchQuestions","response","get","data","handleSubmit","e","preventDefault","creatorId","localStorage","getItem","contestData","questionIds","post","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Workspace","className","onSubmit","type","placeholder","value","onChange","target","required","multiple","selectedOptions","map","o","question","_id","_c","$RefreshReg$"],"sources":["C:/Users/shiva/Downloads/sheetcoder-master/client/src/components/Contest/CreateContest.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./CreateContest.css\";\r\nimport Navbar from \"../Topbar/Navbar\";\r\n\r\nconst CreateContest = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\r\n  const [timeLimit, setTimeLimit] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      const response = await axios.get(\"/problemsTable\");\r\n      setQuestions(response.data);\r\n    };\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const creatorId = localStorage.getItem(\"userId\");\r\n    const contestData = {\r\n      creatorId,\r\n      title,\r\n      questionIds: selectedQuestions,\r\n      timeLimit,\r\n      startTime,\r\n      endTime,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\"/contest/create\", contestData);\r\n      alert(\"Contest created successfully!\");\r\n    } catch (error) {\r\n      alert(\"Error creating contest\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Workspace />\r\n    <div className=\"create-contest-container\">\r\n      <h2>Create New Contest</h2>\r\n      <form onSubmit={handleSubmit} className=\"create-contest-form\">\r\n        <div className=\"form-group\">\r\n          <label>Contest Title</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter contest title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Select Questions</label>\r\n          <select\r\n            multiple\r\n            value={selectedQuestions}\r\n            onChange={(e) =>\r\n              setSelectedQuestions([...e.target.selectedOptions].map((o) => o.value))\r\n            }\r\n            required\r\n          >\r\n            {questions.map((question) => (\r\n              <option key={question._id} value={question._id}>\r\n                {question.title}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Time Limit (minutes)</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter time limit\"\r\n            value={timeLimit}\r\n            onChange={(e) => setTimeLimit(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Start Time</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={startTime}\r\n            onChange={(e) => setStartTime(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>End Time</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={endTime}\r\n            onChange={(e) => setEndTime(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"create-contest-button\">\r\n          Create Contest\r\n        </button>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateContest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}