{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Pixel-CodeArena\\\\client\\\\src\\\\components\\\\Workspace\\\\Workspace.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Split from \"react-split\";\nimport { toast } from \"react-toastify\";\nimport ProblemDescription from \"./ProblemDescription\";\nimport CodeEditor from \"./CodeEditor\";\nimport TestCases from \"./TestCases\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Workspace() {\n  _s();\n  const urlPathname = window.location.pathname;\n  const segments = urlPathname.split(\"/\");\n  const problemId = segments[segments.length - 1];\n  const [details, setDetails] = useState({});\n  const [code, setCode] = useState(\"\");\n  const [processing, setProcessing] = useState(false);\n  const testcases = details.testcases;\n  useEffect(() => {\n    async function fetchDetails() {\n      try {\n        const response = await axios.get(`http://localhost:6001/problem/${problemId}`);\n        setDetails(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchDetails();\n  }, [problemId]);\n  const onChange = data => {\n    setCode(data);\n  };\n  const handleCompile = () => {\n    setProcessing(true);\n    try {\n      var _details$testcases$, _details$testcases$2;\n      // Define a function to evaluate code with input and return output\n      const runCode = (code, input) => {\n        let result;\n        const output = [];\n        const log = message => output.push(message);\n\n        // Create a new function with the code and input\n        const userFunction = new Function('input', `\n          let output = [];\n          function log(message) { output.push(message); }\n          ${code}\n          return output.join('\\\\n');\n        `);\n\n        // Execute the function with input and capture the output\n        result = userFunction(input);\n        return result;\n      };\n\n      // Evaluate code with input from testcases\n      const input = (details === null || details === void 0 ? void 0 : (_details$testcases$ = details.testcases[0]) === null || _details$testcases$ === void 0 ? void 0 : _details$testcases$.input) || '';\n      const expectedOutput = (details === null || details === void 0 ? void 0 : (_details$testcases$2 = details.testcases[0]) === null || _details$testcases$2 === void 0 ? void 0 : _details$testcases$2.output) || '';\n      const result = runCode(code, input);\n\n      // Compare result with expected output\n      if (result.trim() === expectedOutput.trim()) {\n        toast.success(\"Congrats! TestCase Passed\");\n      } else {\n        toast.error(\"Oops! Output Didn't Match\");\n      }\n    } catch (error) {\n      console.error(\"Error during evaluation:\", error);\n      toast.error(\"Error during evaluation. Check console for details.\");\n    } finally {\n      setProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workspace\",\n    children: [/*#__PURE__*/_jsxDEV(Split, {\n      children: [/*#__PURE__*/_jsxDEV(ProblemDescription, {\n        details: details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n        code: code,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestCases, {\n        testcases: details.testcases\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCompile,\n      disabled: processing,\n      children: processing ? \"Processing...\" : \"Compile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Workspace, \"/q0+25LJ5j7Ia7bjqUfdWBlw00o=\");\n_c = Workspace;\nexport default Workspace;\nvar _c;\n$RefreshReg$(_c, \"Workspace\");","map":{"version":3,"names":["React","useState","useEffect","axios","Split","toast","ProblemDescription","CodeEditor","TestCases","jsxDEV","_jsxDEV","Workspace","_s","urlPathname","window","location","pathname","segments","split","problemId","length","details","setDetails","code","setCode","processing","setProcessing","testcases","fetchDetails","response","get","data","error","console","log","onChange","handleCompile","_details$testcases$","_details$testcases$2","runCode","input","result","output","message","push","userFunction","Function","expectedOutput","trim","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Pixel-CodeArena/client/src/components/Workspace/Workspace.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Split from \"react-split\";\r\nimport { toast } from \"react-toastify\";\r\nimport ProblemDescription from \"./ProblemDescription\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport TestCases from \"./TestCases\";\r\n\r\nfunction Workspace() {\r\n  const urlPathname = window.location.pathname;\r\n  const segments = urlPathname.split(\"/\");\r\n  const problemId = segments[segments.length - 1];\r\n\r\n  const [details, setDetails] = useState({});\r\n  const [code, setCode] = useState(\"\");\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const testcases = details.testcases;\r\n\r\n  useEffect(() => {\r\n    async function fetchDetails() {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:6001/problem/${problemId}`\r\n        );\r\n        setDetails(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchDetails();\r\n  }, [problemId]);\r\n\r\n  const onChange = (data) => {\r\n    setCode(data);\r\n  };\r\n\r\n  const handleCompile = () => {\r\n    setProcessing(true);\r\n  \r\n    try {\r\n      // Define a function to evaluate code with input and return output\r\n      const runCode = (code, input) => {\r\n        let result;\r\n        const output = [];\r\n        const log = (message) => output.push(message);\r\n\r\n        // Create a new function with the code and input\r\n        const userFunction = new Function('input', `\r\n          let output = [];\r\n          function log(message) { output.push(message); }\r\n          ${code}\r\n          return output.join('\\\\n');\r\n        `);\r\n        \r\n        // Execute the function with input and capture the output\r\n        result = userFunction(input);\r\n        return result;\r\n      };\r\n\r\n      // Evaluate code with input from testcases\r\n      const input = details?.testcases[0]?.input || '';\r\n      const expectedOutput = details?.testcases[0]?.output || '';\r\n\r\n      const result = runCode(code, input);\r\n\r\n      // Compare result with expected output\r\n      if (result.trim() === expectedOutput.trim()) {\r\n        toast.success(\"Congrats! TestCase Passed\");\r\n      } else {\r\n        toast.error(\"Oops! Output Didn't Match\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during evaluation:\", error);\r\n      toast.error(\"Error during evaluation. Check console for details.\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"workspace\">\r\n      <Split>\r\n        <ProblemDescription details={details} />\r\n        <CodeEditor code={code} onChange={onChange} />\r\n        <TestCases testcases={details.testcases} />\r\n      </Split>\r\n      <button onClick={handleCompile} disabled={processing}>\r\n        {processing ? \"Processing...\" : \"Compile\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Workspace;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}